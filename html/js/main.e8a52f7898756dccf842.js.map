{"version":3,"sources":["webpack:///./source/js/src/util/font-loading.js","webpack:///./source/js/src/util/polyfills.js","webpack:///./source/js/src/index.js"],"names":[],"mappings":";;;;;;;;;sDAyBS,YACR,CAAI,eACH,iBAAK,UACA,OAAG,eACR,iBAAK,UACL,OAEA,KAED,IAEQ,YACR,IAAG,CAAC,EACH,OAID,WAHC,SAII,GAAL,MAAS,EAAI,EAAG,EAAI,EAAS,OAAQ,IACpC,IAAI,GAAmB,KACvB,WAAI,EAAO,GAAI,GAAJ,EAA8B,KACzC,UAAM,KAAK,EACX,OAED,SAAY,OACX,KACA,UACC,gBACA,mBAAK,UACL,OACA,GANF,GASA,SAEQ,YAER,CAAG,GAAC,EAIJ,YACK,GAAL,MAAS,EAAI,EAAG,EAAI,EAAU,OAAQ,IACrC,IAAI,GAAoB,KACxB,WAAI,EAAO,GAAI,GAAJ,EAA+B,KAC1C,UAAM,KAAK,EACX,OAED,SAAY,OACX,KACA,UACC,gBACA,oBAAK,UACL,YAAK,UACL,MANF,GASA,UAEQ,YACR,GAAK,UACL,yBACA,yBAAQ,MACR,mCAEQ,YACR,GAAK,UACL,yBACA,0BAAQ,MACR,mCAED,CC3FwB,YACvB,CAEI,MAAC,OACJ,iBAAO,QAAU,EAElB,EAED,CCVS,YACR,CACA,IACA,IAEQ,YACR,GACC,UAAU,CAER,MACA,0BACC,QAIH,iBAAW,CAET,MACA,mBACC,QAKJ,QAED,qDF3BI,GACH,EACA,EACA,EACA,kBAJD,KA8Fe,EAxFD,WAEZ,KAGD,QAAW,EACX,eAAY,EAEZ,gBAAO,SACP,kBAAe,EAAQ,cACvB,mBAAgB,EAAQ,cAExB,eAAG,EAAS,QAAU,EACrB,SAED,+DCrBD,KAYA,OAAO,SAAoB,WAC1B,GAAiB,QAAU,EAAiB,SAC5C,EAAiB,iBACjB,EAAiB,uBACjB,EAAiB,mBACR,WACR,QAAI,GAAO,KAAM,EAAQ,CAAC,EAAK,YAAc,EAAK,UAA2B,oBAAW,EAAI,CAC5F,EAAO,EAAQ,MACf,gBAAO,CAAC,CACR,IACD,CAViB,EAUhB,QAEF,WACA,OAAO,SAAoB,WAC1B,GAAiB,QAAU,EAAiB,SACnC,WACR,QAAI,GACJ,KAAO,EAAG,SAAW,CAAC,EAAsB,cAAK,EAAG,WACpD,MAAO,GAAa,UACpB,IACD,CAPiB,EAOhB,QCjCF,WA6BC,SADE,WAAS,oBAGF,iBACT,sBADA","file":"main.e8a52f7898756dccf842.js","sourcesContent":["import FontFaceObserver from 'fontfaceobserver';\n\nlet html,\n\tsubFonts,\n\tfullFonts,\n\tsubFontClass,\n\tfullFontClass;\n\nfunction init(options){\n\tif(!options){\n\t\toptions = {};\n\t}\n\n\tsubFonts = options.subFonts || [];\n\tfullFonts = options.fullFonts || [];\n\n\thtml = document.documentElement;\n\tsubFontClass = options.subFontClass || 'subfont-loaded';\n\tfullFontClass = options.subFontClass || 'font-loaded';\n\n\tif(subFonts.length || fullFontClass.length){\n\t\trunFontLoading();\n\t}\n}\n\nfunction runFontLoading(){\n\tif (sessionStorage.fullFontLoaded) {\n\t\thtml.classList.add(fullFontClass);\n\t}else if(sessionStorage.subFontLoaded){\n\t\thtml.classList.add(subFontClass);\n\t\tloadFullSets();\n\t}else{\n\t\tloadSubsets();\n\t}\n}\n\nfunction loadSubsets(){\n\tif(!subFonts.length){\n\t\tloadFullSets();\n\t\treturn;\n\t}\n\n\tconst fonts = [];\n\tfor (let i = 0; i < subFonts.length; i++) {\n\t\tlet options = subFonts[i].option || {};\n\t\tlet font = new FontFaceObserver(subFonts[i].name, options);\n\t\tfonts.push(font.load());\n\t}\n\n\tPromise.all(fonts)\n\t.then(\n\t\tfunction(){\n\t\t\tsessionStorage.subFontLoaded = true;\n\t\t\thtml.classList.add(subFontClass);\n\t\t\tloadFullSets();\n\t\t}\n\t)\n\t.catch(failedToLoadSub);\n}\n\nfunction loadFullSets(){\n\t// for large fonts push a timer (look at timer function below) to let these large font more time to load\n\tif(!fullFonts.length){\n\t\treturn;\n\t}\n\n\tconst fonts = [];\n\tfor (let i = 0; i < fullFonts.length; i++) {\n\t\tlet options = fullFonts[i].option || {};\n\t\tlet font = new FontFaceObserver(fullFonts[i].name, options);\n\t\tfonts.push(font.load());\n\t}\n\n\tPromise.all(fonts)\n\t.then(\n\t\tfunction(){\n\t\t\tsessionStorage.fullFontLoaded = true;\n\t\t\thtml.classList.remove(subFontClass);\n\t\t\thtml.classList.add(fullFontClass);\n\t\t}\n\t)\n\t.catch(failedToLoadFull);\n}\n\nfunction failedToLoadSub(){\n\thtml.classList.remove(subFontClass);\n\tsessionStorage.subFontLoaded = false;\n\tconsole.error('sub-setted font failed to load!');\n}\n\nfunction failedToLoadFull(){\n\thtml.classList.remove(fullFontClass);\n\tsessionStorage.fullFontLoaded = false;\n\tconsole.error('full-setted font failed to load!');\n}\n\nexport default init;\n\n\n\n// WEBPACK FOOTER //\n// ./source/js/src/util/font-loading.js","import svg4everybody from 'svg4everybody';\nimport Promise from 'promise-polyfill';\nimport 'whatwg-fetch';\n\n\nexport default function init(){\n\tsvg4everybody();\n\n\tif (!window.Promise) {\n\t\twindow.Promise = Promise;\n\t}\n}\n\n// matches polyfill\nwindow.Element && function(ElementPrototype) {\n\tElementPrototype.matches = ElementPrototype.matches ||\n\tElementPrototype.matchesSelector ||\n\tElementPrototype.webkitMatchesSelector ||\n\tElementPrototype.msMatchesSelector ||\n\tfunction(selector) {\n\t\tvar node = this, nodes = (node.parentNode || node.document).querySelectorAll(selector), i = -1;\n\t\twhile (nodes[++i] && nodes[i] != node);\n\t\treturn !!nodes[i];\n\t};\n}(Element.prototype);\n\n// closest polyfill\nwindow.Element && function(ElementPrototype) {\n\tElementPrototype.closest = ElementPrototype.closest ||\n\tfunction(selector) {\n\t\tvar el = this;\n\t\twhile (el.matches && !el.matches(selector)) el = el.parentNode;\n\t\treturn el.matches ? el : null;\n\t};\n}(Element.prototype);\n\n\n\n// WEBPACK FOOTER //\n// ./source/js/src/util/polyfills.js","import fontloading from './util/font-loading';\nimport polyfill from './util/polyfills';\n\nfunction init(){\n\tpolyfill();\n\tsetupFontLoading();\n}\n\nfunction setupFontLoading(){\n\tfontloading({\n\t\tsubFonts: [\n\t\t\t{\n\t\t\t\tname: 'fira sans subset',\n\t\t\t\toption: {\n\t\t\t\t\tweight: 400\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\tfullFonts: [\n\t\t\t{\n\t\t\t\tname: 'fira sans',\n\t\t\t\toption: {\n\t\t\t\t\tweight: 400\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t});\n}\n\nif(document.readyState != 'loading'){\n\tinit();\n}else{\n\tdocument.addEventListener('DOMContentLoaded', init);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./source/js/src/index.js"],"sourceRoot":""}